# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/betting_test
spring.datasource.username=postgres
spring.datasource.password=admin123

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Server Configuration
server.port=8080

# Logging Configuration
logging.level.root=INFO
logging.level.com.gambling.betting_odds_api=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Error handling - show full stack trace
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=on_param
server.error.include-exception=true

# Swagger/OpenAPI Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.defaultModelsExpandDepth=2
springdoc.swagger-ui.defaultModelExpandDepth=2

# ============================================
# Spring Boot Actuator Configuration
# ============================================
# Actuator provides production-ready features for monitoring and managing the application

# Expose specific endpoints (comma-separated list)
# Available endpoints: health, info, metrics, env, beans, mappings, loggers, etc.
# We expose only the most useful ones for security reasons
management.endpoints.web.exposure.include=health,info,metrics,env,loggers

# Base path for all actuator endpoints
# Default is /actuator, we keep it for consistency
management.endpoints.web.base-path=/actuator

# ============================================
# Health Endpoint Configuration
# ============================================
# Health check endpoint - used by load balancers, Kubernetes, monitoring tools

# Show full health details (database status, disk space, etc.)
# Options: never, when-authorized, always
# In production, use 'when-authorized' for security
management.endpoint.health.show-details=always

# Show individual components health (db, diskSpace, ping)
management.endpoint.health.show-components=always

# Enable specific health indicators
management.health.db.enabled=true
management.health.diskspace.enabled=true

# ============================================
# Info Endpoint Configuration
# ============================================
# Provides custom application information
# Useful for displaying app version, build info, etc.

# Enable git information in /actuator/info
# Shows git commit, branch, etc. (if git.properties file exists)
management.info.git.mode=full

# Enable build information in /actuator/info
# Shows Maven build time, artifact version (if build-info.properties exists)
management.info.build.enabled=true

# Enable environment information
management.info.env.enabled=true

# ============================================
# Metrics Endpoint Configuration
# ============================================
# Provides application metrics (memory, CPU, HTTP requests, etc.)

# Enable JVM metrics (memory usage, garbage collection)
management.metrics.enable.jvm=true

# Enable HTTP request metrics (request count, duration, errors)
management.metrics.enable.http=true

# Enable database metrics (connection pool, queries)
management.metrics.enable.jdbc=true

# ============================================
# Loggers Endpoint Configuration
# ============================================
# Allows changing log levels at runtime without restart
# Very useful for debugging production issues

# Enable loggers endpoint
#management.endpoint.loggers.enabled=true
management.endpoint.loggers.access=UNRESTRICTED